// Code generated by protoc-gen-go.
// source: contract.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	contract.proto
	data.proto
	response-data.proto

It has these top-level messages:
	ContractSignature
	ContractAsset
	ExpressionResult
	ComponentsExpression
	ComponentData
	ContractComponent
	ContractBody
	ContractHead
	Contract
	ContractData
	ResponseData
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ContractSignature struct {
	OwnerPubkey   string `protobuf:"bytes,1,opt,name=OwnerPubkey" json:"OwnerPubkey,omitempty"`
	Signature     string `protobuf:"bytes,2,opt,name=Signature" json:"Signature,omitempty"`
	SignTimestamp string `protobuf:"bytes,3,opt,name=SignTimestamp" json:"SignTimestamp,omitempty"`
}

func (m *ContractSignature) Reset()                    { *m = ContractSignature{} }
func (m *ContractSignature) String() string            { return proto.CompactTextString(m) }
func (*ContractSignature) ProtoMessage()               {}
func (*ContractSignature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ContractSignature) GetOwnerPubkey() string {
	if m != nil {
		return m.OwnerPubkey
	}
	return ""
}

func (m *ContractSignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ContractSignature) GetSignTimestamp() string {
	if m != nil {
		return m.SignTimestamp
	}
	return ""
}

type ContractAsset struct {
	AssetId     string  `protobuf:"bytes,1,opt,name=AssetId" json:"AssetId,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Caption     string  `protobuf:"bytes,3,opt,name=Caption" json:"Caption,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=Description" json:"Description,omitempty"`
	Unit        string  `protobuf:"bytes,5,opt,name=Unit" json:"Unit,omitempty"`
	Amount      float32 `protobuf:"fixed32,6,opt,name=Amount" json:"Amount,omitempty"`
	MetaData    []byte  `protobuf:"bytes,7,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
}

func (m *ContractAsset) Reset()                    { *m = ContractAsset{} }
func (m *ContractAsset) String() string            { return proto.CompactTextString(m) }
func (*ContractAsset) ProtoMessage()               {}
func (*ContractAsset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ContractAsset) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *ContractAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContractAsset) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *ContractAsset) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContractAsset) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ContractAsset) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ContractAsset) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

type ExpressionResult struct {
	Messsage string `protobuf:"bytes,1,opt,name=Messsage" json:"Messsage,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=Code" json:"Code,omitempty"`
}

func (m *ExpressionResult) Reset()                    { *m = ExpressionResult{} }
func (m *ExpressionResult) String() string            { return proto.CompactTextString(m) }
func (*ExpressionResult) ProtoMessage()               {}
func (*ExpressionResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ExpressionResult) GetMesssage() string {
	if m != nil {
		return m.Messsage
	}
	return ""
}

func (m *ExpressionResult) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ComponentsExpression struct {
	Cname            string            `protobuf:"bytes,1,opt,name=Cname" json:"Cname,omitempty"`
	Ctype            string            `protobuf:"bytes,2,opt,name=Ctype" json:"Ctype,omitempty"`
	Caption          string            `protobuf:"bytes,3,opt,name=Caption" json:"Caption,omitempty"`
	Description      string            `protobuf:"bytes,4,opt,name=Description" json:"Description,omitempty"`
	ExpressionStr    string            `protobuf:"bytes,5,opt,name=ExpressionStr" json:"ExpressionStr,omitempty"`
	ExpressionResult *ExpressionResult `protobuf:"bytes,6,opt,name=ExpressionResult" json:"ExpressionResult,omitempty"`
	LogicValue       string            `protobuf:"bytes,7,opt,name=LogicValue" json:"LogicValue,omitempty"`
}

func (m *ComponentsExpression) Reset()                    { *m = ComponentsExpression{} }
func (m *ComponentsExpression) String() string            { return proto.CompactTextString(m) }
func (*ComponentsExpression) ProtoMessage()               {}
func (*ComponentsExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ComponentsExpression) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

func (m *ComponentsExpression) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *ComponentsExpression) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *ComponentsExpression) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ComponentsExpression) GetExpressionStr() string {
	if m != nil {
		return m.ExpressionStr
	}
	return ""
}

func (m *ComponentsExpression) GetExpressionResult() *ExpressionResult {
	if m != nil {
		return m.ExpressionResult
	}
	return nil
}

func (m *ComponentsExpression) GetLogicValue() string {
	if m != nil {
		return m.LogicValue
	}
	return ""
}

type ComponentData struct {
	Cname        string `protobuf:"bytes,1,opt,name=Cname" json:"Cname,omitempty"`
	Ctype        string `protobuf:"bytes,2,opt,name=Ctype" json:"Ctype,omitempty"`
	Caption      string `protobuf:"bytes,3,opt,name=Caption" json:"Caption,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=Description" json:"Description,omitempty"`
	ModifyDate   string `protobuf:"bytes,5,opt,name=ModifyDate" json:"ModifyDate,omitempty"`
	HardConvType string `protobuf:"bytes,6,opt,name=HardConvType" json:"HardConvType,omitempty"`
	//    map<string,?> Category = 7; // map[string]interface{} Category
	Parent    *ComponentData `protobuf:"bytes,8,opt,name=Parent" json:"Parent,omitempty"`
	Mandatory bool           `protobuf:"varint,9,opt,name=Mandatory" json:"Mandatory,omitempty"`
	//    google.protobuf.Any DefaultValue = 10; // interface{} DefaultValue
	Unit string `protobuf:"bytes,11,opt,name=Unit" json:"Unit,omitempty"`
	//    google.protobuf.Any Value = 12; // interface{} Value
	Options map[string]int32 `protobuf:"bytes,13,rep,name=Options" json:"Options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	//    repeated google.protobuf.Any DataRange = 14; // []interface{} DataRange
	Format string `protobuf:"bytes,15,opt,name=Format" json:"Format,omitempty"`
}

func (m *ComponentData) Reset()                    { *m = ComponentData{} }
func (m *ComponentData) String() string            { return proto.CompactTextString(m) }
func (*ComponentData) ProtoMessage()               {}
func (*ComponentData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ComponentData) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

func (m *ComponentData) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *ComponentData) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *ComponentData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ComponentData) GetModifyDate() string {
	if m != nil {
		return m.ModifyDate
	}
	return ""
}

func (m *ComponentData) GetHardConvType() string {
	if m != nil {
		return m.HardConvType
	}
	return ""
}

func (m *ComponentData) GetParent() *ComponentData {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *ComponentData) GetMandatory() bool {
	if m != nil {
		return m.Mandatory
	}
	return false
}

func (m *ComponentData) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ComponentData) GetOptions() map[string]int32 {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ComponentData) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

type ContractComponent struct {
	Cname                         string                  `protobuf:"bytes,1,opt,name=Cname" json:"Cname,omitempty"`
	Ctype                         string                  `protobuf:"bytes,2,opt,name=Ctype" json:"Ctype,omitempty"`
	Caption                       string                  `protobuf:"bytes,3,opt,name=Caption" json:"Caption,omitempty"`
	Description                   string                  `protobuf:"bytes,4,opt,name=Description" json:"Description,omitempty"`
	State                         string                  `protobuf:"bytes,5,opt,name=State" json:"State,omitempty"`
	PreCondition                  []*ComponentsExpression `protobuf:"bytes,6,rep,name=PreCondition" json:"PreCondition,omitempty"`
	CompleteCondition             []*ComponentsExpression `protobuf:"bytes,7,rep,name=CompleteCondition" json:"CompleteCondition,omitempty"`
	DisgardCondition              []*ComponentsExpression `protobuf:"bytes,8,rep,name=DisgardCondition" json:"DisgardCondition,omitempty"`
	NextTasks                     []string                `protobuf:"bytes,9,rep,name=NextTasks" json:"NextTasks,omitempty"`
	DataList                      []*ComponentData        `protobuf:"bytes,10,rep,name=DataList" json:"DataList,omitempty"`
	DataValueSetterExpressionList []*ComponentsExpression `protobuf:"bytes,11,rep,name=DataValueSetterExpressionList" json:"DataValueSetterExpressionList,omitempty"`
	CandidateList                 *ContractComponent      `protobuf:"bytes,12,opt,name=CandidateList" json:"CandidateList,omitempty"`
	DecisionResult                *ContractComponent      `protobuf:"bytes,13,opt,name=DecisionResult" json:"DecisionResult,omitempty"`
	TaskList                      []string                `protobuf:"bytes,14,rep,name=TaskList" json:"TaskList,omitempty"`
	SupportArguments              []string                `protobuf:"bytes,15,rep,name=SupportArguments" json:"SupportArguments,omitempty"`
	AgainstArguments              []string                `protobuf:"bytes,16,rep,name=AgainstArguments" json:"AgainstArguments,omitempty"`
	Support                       int32                   `protobuf:"varint,17,opt,name=Support" json:"Support,omitempty"`
	Text                          []string                `protobuf:"bytes,18,rep,name=Text" json:"Text,omitempty"`
}

func (m *ContractComponent) Reset()                    { *m = ContractComponent{} }
func (m *ContractComponent) String() string            { return proto.CompactTextString(m) }
func (*ContractComponent) ProtoMessage()               {}
func (*ContractComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ContractComponent) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

func (m *ContractComponent) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *ContractComponent) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *ContractComponent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContractComponent) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ContractComponent) GetPreCondition() []*ComponentsExpression {
	if m != nil {
		return m.PreCondition
	}
	return nil
}

func (m *ContractComponent) GetCompleteCondition() []*ComponentsExpression {
	if m != nil {
		return m.CompleteCondition
	}
	return nil
}

func (m *ContractComponent) GetDisgardCondition() []*ComponentsExpression {
	if m != nil {
		return m.DisgardCondition
	}
	return nil
}

func (m *ContractComponent) GetNextTasks() []string {
	if m != nil {
		return m.NextTasks
	}
	return nil
}

func (m *ContractComponent) GetDataList() []*ComponentData {
	if m != nil {
		return m.DataList
	}
	return nil
}

func (m *ContractComponent) GetDataValueSetterExpressionList() []*ComponentsExpression {
	if m != nil {
		return m.DataValueSetterExpressionList
	}
	return nil
}

func (m *ContractComponent) GetCandidateList() *ContractComponent {
	if m != nil {
		return m.CandidateList
	}
	return nil
}

func (m *ContractComponent) GetDecisionResult() *ContractComponent {
	if m != nil {
		return m.DecisionResult
	}
	return nil
}

func (m *ContractComponent) GetTaskList() []string {
	if m != nil {
		return m.TaskList
	}
	return nil
}

func (m *ContractComponent) GetSupportArguments() []string {
	if m != nil {
		return m.SupportArguments
	}
	return nil
}

func (m *ContractComponent) GetAgainstArguments() []string {
	if m != nil {
		return m.AgainstArguments
	}
	return nil
}

func (m *ContractComponent) GetSupport() int32 {
	if m != nil {
		return m.Support
	}
	return 0
}

func (m *ContractComponent) GetText() []string {
	if m != nil {
		return m.Text
	}
	return nil
}

type ContractBody struct {
	ContractId         string               `protobuf:"bytes,1,opt,name=ContractId" json:"ContractId,omitempty"`
	Cname              string               `protobuf:"bytes,2,opt,name=Cname" json:"Cname,omitempty"`
	Ctype              string               `protobuf:"bytes,3,opt,name=Ctype" json:"Ctype,omitempty"`
	Caption            string               `protobuf:"bytes,4,opt,name=Caption" json:"Caption,omitempty"`
	Description        string               `protobuf:"bytes,5,opt,name=Description" json:"Description,omitempty"`
	ContractState      string               `protobuf:"bytes,6,opt,name=ContractState" json:"ContractState,omitempty"`
	Creator            string               `protobuf:"bytes,7,opt,name=Creator" json:"Creator,omitempty"`
	CreatorTime        string               `protobuf:"bytes,8,opt,name=CreatorTime" json:"CreatorTime,omitempty"`
	StartTime          string               `protobuf:"bytes,9,opt,name=StartTime" json:"StartTime,omitempty"`
	EndTime            string               `protobuf:"bytes,10,opt,name=EndTime" json:"EndTime,omitempty"`
	ContractOwners     []string             `protobuf:"bytes,11,rep,name=ContractOwners" json:"ContractOwners,omitempty"`
	ContractAssets     []*ContractAsset     `protobuf:"bytes,12,rep,name=ContractAssets" json:"ContractAssets,omitempty"`
	ContractSignatures []*ContractSignature `protobuf:"bytes,13,rep,name=ContractSignatures" json:"ContractSignatures,omitempty"`
	ContractComponents []*ContractComponent `protobuf:"bytes,14,rep,name=ContractComponents" json:"ContractComponents,omitempty"`
}

func (m *ContractBody) Reset()                    { *m = ContractBody{} }
func (m *ContractBody) String() string            { return proto.CompactTextString(m) }
func (*ContractBody) ProtoMessage()               {}
func (*ContractBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ContractBody) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *ContractBody) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

func (m *ContractBody) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *ContractBody) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *ContractBody) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContractBody) GetContractState() string {
	if m != nil {
		return m.ContractState
	}
	return ""
}

func (m *ContractBody) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ContractBody) GetCreatorTime() string {
	if m != nil {
		return m.CreatorTime
	}
	return ""
}

func (m *ContractBody) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ContractBody) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ContractBody) GetContractOwners() []string {
	if m != nil {
		return m.ContractOwners
	}
	return nil
}

func (m *ContractBody) GetContractAssets() []*ContractAsset {
	if m != nil {
		return m.ContractAssets
	}
	return nil
}

func (m *ContractBody) GetContractSignatures() []*ContractSignature {
	if m != nil {
		return m.ContractSignatures
	}
	return nil
}

func (m *ContractBody) GetContractComponents() []*ContractComponent {
	if m != nil {
		return m.ContractComponents
	}
	return nil
}

type ContractHead struct {
	MainPubkey string `protobuf:"bytes,1,opt,name=MainPubkey" json:"MainPubkey,omitempty"`
	Version    int32  `protobuf:"varint,2,opt,name=Version" json:"Version,omitempty"`
}

func (m *ContractHead) Reset()                    { *m = ContractHead{} }
func (m *ContractHead) String() string            { return proto.CompactTextString(m) }
func (*ContractHead) ProtoMessage()               {}
func (*ContractHead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ContractHead) GetMainPubkey() string {
	if m != nil {
		return m.MainPubkey
	}
	return ""
}

func (m *ContractHead) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type Contract struct {
	Id           string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ContractHead *ContractHead `protobuf:"bytes,2,opt,name=ContractHead" json:"ContractHead,omitempty"`
	ContractBody *ContractBody `protobuf:"bytes,3,opt,name=ContractBody" json:"ContractBody,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Contract) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Contract) GetContractHead() *ContractHead {
	if m != nil {
		return m.ContractHead
	}
	return nil
}

func (m *Contract) GetContractBody() *ContractBody {
	if m != nil {
		return m.ContractBody
	}
	return nil
}

func init() {
	proto.RegisterType((*ContractSignature)(nil), "protos.ContractSignature")
	proto.RegisterType((*ContractAsset)(nil), "protos.ContractAsset")
	proto.RegisterType((*ExpressionResult)(nil), "protos.ExpressionResult")
	proto.RegisterType((*ComponentsExpression)(nil), "protos.ComponentsExpression")
	proto.RegisterType((*ComponentData)(nil), "protos.ComponentData")
	proto.RegisterType((*ContractComponent)(nil), "protos.ContractComponent")
	proto.RegisterType((*ContractBody)(nil), "protos.ContractBody")
	proto.RegisterType((*ContractHead)(nil), "protos.ContractHead")
	proto.RegisterType((*Contract)(nil), "protos.Contract")
}

func init() { proto.RegisterFile("contract.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 939 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x6d, 0x6b, 0x1b, 0x47,
	0x10, 0x46, 0x92, 0x25, 0x4b, 0xa3, 0x97, 0x28, 0x8b, 0x5b, 0xb6, 0x21, 0x0d, 0xe2, 0x08, 0x45,
	0x14, 0x6a, 0xa8, 0xfb, 0xc5, 0x84, 0x96, 0x56, 0x91, 0x5c, 0x9c, 0x12, 0x27, 0x66, 0xe5, 0xe6,
	0xfb, 0x5a, 0xb7, 0x15, 0x47, 0xac, 0xbd, 0x63, 0x77, 0x95, 0x5a, 0x7f, 0xa1, 0x1f, 0xfa, 0x4f,
	0xda, 0xff, 0x50, 0xe8, 0x0f, 0x2b, 0x33, 0xb7, 0xf7, 0x26, 0x29, 0xae, 0x21, 0xe0, 0x4f, 0xda,
	0x79, 0x76, 0xe6, 0x99, 0xdd, 0xd1, 0x33, 0x73, 0x0b, 0x83, 0x45, 0xac, 0x9d, 0x91, 0x0b, 0x77,
	0x9c, 0x98, 0xd8, 0xc5, 0xac, 0x45, 0x3f, 0x36, 0xd8, 0xc0, 0xe3, 0xa9, 0xdf, 0x99, 0x47, 0x4b,
	0x2d, 0xdd, 0xda, 0x28, 0x36, 0x82, 0xee, 0xdb, 0xdf, 0xb5, 0x32, 0x97, 0xeb, 0xeb, 0xf7, 0x6a,
	0xc3, 0x6b, 0xa3, 0xda, 0xb8, 0x23, 0xca, 0x10, 0x7b, 0x0a, 0x9d, 0xdc, 0x9d, 0xd7, 0x69, 0xbf,
	0x00, 0xd8, 0x73, 0xe8, 0xa3, 0x71, 0x15, 0xad, 0x94, 0x75, 0x72, 0x95, 0xf0, 0x06, 0x79, 0x54,
	0xc1, 0xe0, 0x9f, 0x1a, 0xf4, 0xb3, 0xdc, 0x13, 0x6b, 0x95, 0x63, 0x1c, 0x0e, 0x69, 0xf1, 0x2a,
	0xf4, 0x39, 0x33, 0x93, 0x31, 0x38, 0x78, 0x23, 0x57, 0x59, 0x2a, 0x5a, 0xa3, 0xf7, 0x54, 0x26,
	0x2e, 0x8a, 0xb5, 0xe7, 0xcf, 0x4c, 0x3c, 0xff, 0x4c, 0xd9, 0x85, 0x89, 0xd2, 0xdd, 0x83, 0xf4,
	0xfc, 0x25, 0x08, 0xf9, 0x7e, 0xd5, 0x91, 0xe3, 0xcd, 0x94, 0x0f, 0xd7, 0xec, 0x73, 0x68, 0x4d,
	0x56, 0xf1, 0x5a, 0x3b, 0xde, 0x1a, 0xd5, 0xc6, 0x75, 0xe1, 0x2d, 0xf6, 0x04, 0xda, 0x17, 0xca,
	0xc9, 0x99, 0x74, 0x92, 0x1f, 0x8e, 0x6a, 0xe3, 0x9e, 0xc8, 0xed, 0xe0, 0x25, 0x0c, 0xcf, 0x6e,
	0x13, 0xa3, 0xac, 0x8d, 0x62, 0x2d, 0x94, 0x5d, 0xdf, 0x78, 0x7f, 0x6b, 0xad, 0x5c, 0x2a, 0x7f,
	0x8d, 0xdc, 0xc6, 0xbc, 0xd3, 0x38, 0xcc, 0xef, 0x81, 0xeb, 0xe0, 0x8f, 0x3a, 0x1c, 0x4d, 0xe3,
	0x55, 0x12, 0x6b, 0xa5, 0x9d, 0x2d, 0xe8, 0xd8, 0x11, 0x34, 0xa7, 0x1a, 0x6f, 0x9d, 0xb2, 0xa4,
	0x06, 0xa1, 0x6e, 0x93, 0x64, 0x1c, 0xa9, 0xf1, 0x49, 0xc5, 0x78, 0x0e, 0xfd, 0x22, 0xeb, 0xdc,
	0x19, 0x5f, 0x95, 0x2a, 0xc8, 0x66, 0xbb, 0x57, 0xa5, 0x42, 0x75, 0x4f, 0x78, 0xaa, 0x29, 0x7b,
	0xbc, 0xbd, 0x2f, 0x76, 0x8b, 0xf3, 0x0c, 0xe0, 0x75, 0xbc, 0x8c, 0x16, 0xef, 0xe4, 0xcd, 0x5a,
	0x51, 0x39, 0x3b, 0xa2, 0x84, 0x04, 0x7f, 0x37, 0x50, 0x14, 0xbe, 0x18, 0x58, 0xe2, 0x07, 0xab,
	0xc2, 0x33, 0x80, 0x8b, 0x38, 0x8c, 0x7e, 0xdb, 0xcc, 0xa4, 0x53, 0xbe, 0x04, 0x25, 0x84, 0x05,
	0xd0, 0x3b, 0x97, 0x26, 0x9c, 0xc6, 0xfa, 0xc3, 0x15, 0x26, 0x6e, 0x91, 0x47, 0x05, 0x63, 0xdf,
	0x40, 0xeb, 0x52, 0x1a, 0xa5, 0x1d, 0x6f, 0x53, 0x65, 0x3e, 0xcb, 0x2a, 0x53, 0xb9, 0x92, 0xf0,
	0x4e, 0xd8, 0x45, 0x17, 0x52, 0x87, 0xd2, 0xc5, 0x66, 0xc3, 0x3b, 0xa3, 0xda, 0xb8, 0x2d, 0x0a,
	0x20, 0xd7, 0x68, 0xb7, 0xa4, 0xd1, 0xef, 0xe1, 0xf0, 0x2d, 0x1d, 0xd7, 0xf2, 0xfe, 0xa8, 0x31,
	0xee, 0x9e, 0x04, 0x7b, 0x33, 0x1c, 0x7b, 0xa7, 0x33, 0xed, 0xcc, 0x46, 0x64, 0x21, 0xa8, 0xf0,
	0x9f, 0x63, 0xb3, 0x92, 0x8e, 0x3f, 0x22, 0x4e, 0x6f, 0x3d, 0x79, 0x01, 0xbd, 0x72, 0x00, 0x1b,
	0x42, 0xa3, 0xe8, 0x7b, 0x5c, 0x62, 0xb9, 0x3f, 0xd0, 0x3f, 0x86, 0xe5, 0x6e, 0x8a, 0xd4, 0x78,
	0x51, 0x3f, 0xad, 0x05, 0xff, 0xb6, 0x8a, 0x09, 0x92, 0x9f, 0xe1, 0xc1, 0xfe, 0xb4, 0x23, 0x68,
	0xce, 0x5d, 0xf1, 0x7f, 0xa5, 0x06, 0xfb, 0x09, 0x7a, 0x97, 0x46, 0x4d, 0x63, 0x1d, 0x46, 0x14,
	0xd8, 0xa2, 0x52, 0x3d, 0xdd, 0x29, 0x55, 0xa9, 0xd9, 0x44, 0x25, 0x82, 0xfd, 0x82, 0x97, 0x5a,
	0x25, 0x37, 0xca, 0x95, 0x68, 0x0e, 0xef, 0x41, 0xb3, 0x1b, 0xc6, 0xce, 0x61, 0x38, 0x8b, 0xec,
	0x32, 0xd5, 0x89, 0xa7, 0x6a, 0xdf, 0x83, 0x6a, 0x27, 0x0a, 0xf5, 0xf2, 0x46, 0xdd, 0xba, 0x2b,
	0x69, 0xdf, 0x5b, 0xde, 0x19, 0x35, 0x70, 0xea, 0xe6, 0x00, 0xfb, 0x16, 0xda, 0xf8, 0xdf, 0xbf,
	0x8e, 0xac, 0xe3, 0x40, 0xfc, 0x1f, 0x91, 0x5f, 0xee, 0xc6, 0xae, 0xe1, 0x4b, 0x5c, 0x53, 0xeb,
	0xcd, 0x95, 0x73, 0xca, 0x14, 0xf9, 0x89, 0xa7, 0x7b, 0x8f, 0x73, 0xde, 0x4d, 0xc1, 0x7e, 0x84,
	0xfe, 0x54, 0xea, 0x30, 0x0a, 0xa5, 0x53, 0xc4, 0xd9, 0xa3, 0xd6, 0xf8, 0xa2, 0xe0, 0xdc, 0x12,
	0x8f, 0xa8, 0xfa, 0xb3, 0x09, 0x0c, 0x66, 0x6a, 0x11, 0x95, 0xc6, 0x4e, 0xff, 0xff, 0x18, 0xb6,
	0x02, 0x70, 0x24, 0x63, 0x8d, 0x28, 0xfd, 0x80, 0xea, 0x96, 0xdb, 0xec, 0x6b, 0x18, 0xce, 0xd7,
	0x49, 0x12, 0x1b, 0x37, 0x31, 0xcb, 0xf5, 0x0a, 0x2f, 0xc7, 0x1f, 0x91, 0xcf, 0x0e, 0x8e, 0xbe,
	0x93, 0xa5, 0x8c, 0xb4, 0x2d, 0xf9, 0x0e, 0x53, 0xdf, 0x6d, 0x1c, 0x65, 0xed, 0xe3, 0xf9, 0x63,
	0x6a, 0x9a, 0xcc, 0xc4, 0xc6, 0xbe, 0x52, 0xb7, 0x8e, 0x33, 0x8a, 0xa4, 0x75, 0xf0, 0xd7, 0x01,
	0xf4, 0xb2, 0x7b, 0xbc, 0x8c, 0xc3, 0x0d, 0x8e, 0xa3, 0xcc, 0xce, 0x3f, 0x87, 0x25, 0xa4, 0xe8,
	0xb0, 0xfa, 0xde, 0x0e, 0x6b, 0x7c, 0xa4, 0xc3, 0x0e, 0xee, 0xec, 0xb0, 0xe6, 0xde, 0x8f, 0x43,
	0xfe, 0x40, 0xa0, 0x4e, 0x4b, 0xe7, 0x5e, 0x15, 0xa4, 0x0c, 0x46, 0xe1, 0xdc, 0xf2, 0x33, 0x3d,
	0x33, 0x31, 0x83, 0x5f, 0xe2, 0x97, 0x9f, 0xe6, 0x62, 0x47, 0x94, 0x21, 0x7a, 0x4b, 0x38, 0x69,
	0x1c, 0xed, 0x77, 0xfc, 0x5b, 0x22, 0x03, 0x90, 0xf9, 0x4c, 0x87, 0xb4, 0x07, 0x29, 0xb3, 0x37,
	0xd9, 0x57, 0x30, 0xc8, 0x0e, 0x41, 0x4f, 0x13, 0x4b, 0x6a, 0xed, 0x88, 0x2d, 0x94, 0xfd, 0x50,
	0xf8, 0xd1, 0x73, 0xc2, 0xf2, 0xde, 0x76, 0x77, 0x94, 0x76, 0xc5, 0x96, 0x33, 0x7b, 0x05, 0x6c,
	0xe7, 0x85, 0x94, 0x4d, 0xdf, 0x1d, 0x09, 0xe6, 0x1e, 0x62, 0x4f, 0x50, 0x99, 0xaa, 0xe8, 0x24,
	0x12, 0xe4, 0x9d, 0x6a, 0xde, 0x13, 0x14, 0x9c, 0x17, 0x72, 0x39, 0x57, 0x32, 0xa4, 0xaf, 0x97,
	0x8c, 0x74, 0xe5, 0xc5, 0x56, 0x42, 0xb0, 0x8c, 0xef, 0x94, 0xc1, 0x96, 0xf0, 0x23, 0x3c, 0x33,
	0x83, 0x3f, 0x6b, 0xd0, 0xce, 0xa8, 0xd8, 0x00, 0xea, 0x51, 0xa6, 0xb6, 0x7a, 0x14, 0xb2, 0xd3,
	0x6a, 0x1a, 0x8a, 0xed, 0x9e, 0x1c, 0x6d, 0x9f, 0x15, 0xf7, 0x44, 0xf5, 0x40, 0xa7, 0x55, 0x3d,
	0x93, 0x20, 0xf7, 0x44, 0xe2, 0x9e, 0xa8, 0x78, 0x5e, 0xa7, 0x4f, 0xd3, 0xef, 0xfe, 0x0b, 0x00,
	0x00, 0xff, 0xff, 0x98, 0x38, 0xd2, 0xc1, 0xb3, 0x0a, 0x00, 0x00,
}
