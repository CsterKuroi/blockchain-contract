// Code generated by protoc-gen-go.
// source: response_contract_execute_logs.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ResponseContractExecuteLog struct {
	// response code, 9bit
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code"`
	// response message
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	// response data
	Result *ContractExecuteLog `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *ResponseContractExecuteLog) Reset()                    { *m = ResponseContractExecuteLog{} }
func (m *ResponseContractExecuteLog) String() string            { return proto.CompactTextString(m) }
func (*ResponseContractExecuteLog) ProtoMessage()               {}
func (*ResponseContractExecuteLog) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ResponseContractExecuteLog) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseContractExecuteLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ResponseContractExecuteLog) GetResult() *ContractExecuteLog {
	if m != nil {
		return m.Result
	}
	return nil
}

type ResponsePaginationContractExecuteLog struct {
	// response code, 9bit
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code"`
	// response message
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	// response data
	Result *PaginationContractExecuteLog `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *ResponsePaginationContractExecuteLog) Reset()         { *m = ResponsePaginationContractExecuteLog{} }
func (m *ResponsePaginationContractExecuteLog) String() string { return proto.CompactTextString(m) }
func (*ResponsePaginationContractExecuteLog) ProtoMessage()    {}
func (*ResponsePaginationContractExecuteLog) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1}
}

func (m *ResponsePaginationContractExecuteLog) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponsePaginationContractExecuteLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ResponsePaginationContractExecuteLog) GetResult() *PaginationContractExecuteLog {
	if m != nil {
		return m.Result
	}
	return nil
}

type PaginationContractExecuteLog struct {
	// current_pageNum
	Page int32 `protobuf:"varint,1,opt,name=page" json:"page"`
	// page_size
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size"`
	// total page number
	Total int32 `protobuf:"varint,3,opt,name=total" json:"total"`
	// pagination data for contractList
	Data []*ContractExecuteLog `protobuf:"bytes,4,rep,name=data" json:"data"`
}

func (m *PaginationContractExecuteLog) Reset()                    { *m = PaginationContractExecuteLog{} }
func (m *PaginationContractExecuteLog) String() string            { return proto.CompactTextString(m) }
func (*PaginationContractExecuteLog) ProtoMessage()               {}
func (*PaginationContractExecuteLog) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *PaginationContractExecuteLog) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PaginationContractExecuteLog) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PaginationContractExecuteLog) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PaginationContractExecuteLog) GetData() []*ContractExecuteLog {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ResponseContractExecuteLog)(nil), "protos.ResponseContractExecuteLog")
	proto.RegisterType((*ResponsePaginationContractExecuteLog)(nil), "protos.ResponsePaginationContractExecuteLog")
	proto.RegisterType((*PaginationContractExecuteLog)(nil), "protos.PaginationContractExecuteLog")
}

func init() { proto.RegisterFile("response_contract_execute_logs.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x31, 0x6b, 0xc3, 0x30,
	0x10, 0x85, 0x51, 0x6d, 0x87, 0xe6, 0xba, 0x14, 0x91, 0xc1, 0x38, 0x85, 0x9a, 0xe0, 0xc1, 0x93,
	0x87, 0x74, 0xe8, 0xd2, 0x29, 0xa5, 0x5b, 0x87, 0xa0, 0xfe, 0x00, 0xa3, 0xda, 0x87, 0x30, 0x38,
	0x3e, 0x23, 0xc9, 0xa5, 0xe4, 0x27, 0x74, 0xef, 0xff, 0x2d, 0x92, 0x9d, 0x0c, 0x2d, 0x4d, 0x20,
	0xd3, 0x7b, 0x12, 0x4f, 0x4f, 0x1f, 0x77, 0x90, 0x69, 0x34, 0x3d, 0x75, 0x06, 0xcb, 0x8a, 0x3a,
	0xab, 0x65, 0x65, 0x4b, 0xfc, 0xc4, 0x6a, 0xb0, 0x58, 0xb6, 0xa4, 0x4c, 0xd1, 0x6b, 0xb2, 0xc4,
	0x67, 0x5e, 0x4c, 0xb2, 0x3c, 0x11, 0x5a, 0x7d, 0x40, 0x22, 0xa6, 0xb2, 0xe7, 0x29, 0xf6, 0x32,
	0xa6, 0x5e, 0x49, 0x71, 0x0e, 0x61, 0x45, 0x35, 0xc6, 0x2c, 0x65, 0x79, 0x24, 0xbc, 0xe7, 0xb7,
	0x10, 0xec, 0x8c, 0x8a, 0xaf, 0x52, 0x96, 0xcf, 0x85, 0xb3, 0x7c, 0x0d, 0x33, 0x8d, 0x66, 0x68,
	0x6d, 0x1c, 0xa4, 0x2c, 0xbf, 0x59, 0x27, 0x63, 0xb7, 0x29, 0xfe, 0x36, 0x8a, 0x29, 0xb9, 0xfa,
	0x62, 0x90, 0x1d, 0x3e, 0xde, 0x4a, 0xd5, 0x74, 0xd2, 0x36, 0xd4, 0x5d, 0x8c, 0xf0, 0xf4, 0x0b,
	0x21, 0x3b, 0x20, 0x9c, 0xea, 0x3e, 0xc2, 0x7c, 0x33, 0xb8, 0x3b, 0x07, 0xd1, 0x4b, 0x75, 0x84,
	0x70, 0x9e, 0x2f, 0x61, 0xee, 0xb4, 0x34, 0xcd, 0x1e, 0x3d, 0x4a, 0x24, 0xae, 0xdd, 0xc5, 0x5b,
	0xb3, 0x47, 0xbe, 0x80, 0xc8, 0x92, 0x95, 0xad, 0xc7, 0x89, 0xc4, 0x78, 0xe0, 0x05, 0x84, 0xb5,
	0xb4, 0x32, 0x0e, 0xd3, 0xe0, 0xcc, 0x98, 0x7c, 0x6e, 0xf3, 0x08, 0x8b, 0x8a, 0x76, 0xc5, 0xd0,
	0x35, 0x2d, 0xd6, 0x0a, 0xf5, 0xf4, 0x60, 0x73, 0xbf, 0x75, 0xfa, 0xff, 0xde, 0xde, 0xc7, 0xd5,
	0x3f, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x79, 0x4b, 0x80, 0x29, 0x02, 0x00, 0x00,
}
